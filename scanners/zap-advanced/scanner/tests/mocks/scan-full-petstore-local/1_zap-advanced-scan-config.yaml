# SPDX-FileCopyrightText: 2021 iteratec GmbH
#
# SPDX-License-Identifier: Apache-2.0

---
# Global ZAP Configurations
global:
  # True to create another ZAP session (overwrite the former if the same name already exists), False to use an existing on
  isNewSession: true
  # Sets the ZAP Session name
  sessionName: SCB
  # Determine if a proxy script must be loaded. Proxy scripts are executed for every request traversing ZAP
  scripts:
    - name: "Alert on HTTP Response Code Errors.js"
      enabled: true
    - name: "Alert on Unexpected Content Types.js"
      enabled: true

# List of 1 or more contexts, mandatory
contexts:
  # Name to be used to refer to this context in other jobs, mandatory
  - name: scb-petstore-context
    # The top level url, mandatory, everything under this will be included. IMPORTANT: must be the hostname without any subpath!
    url: http://localhost:8000/
    # An optional list of regexes to include
    includePaths:
      - "http://localhost:8000/v2.*"
    # An optional list of regexes to exclude
    excludePaths:
      - ".*\\.css"
      - ".*\\.png"
      - ".*\\.jpeg"

apis:
    # -- The name of the spider configuration
  - name: scb-petstore-api
    # -- The Name of the context (zapConfiguration.contexts[x].name) to spider, default: first context available.
    context: scb-petstore-context
    # -- format of the API ('openapi', 'grapql', 'soap')
    format: openapi
    # -- Url to start spidering from, default: first context URL
    url: http://localhost:8000/v2/swagger.json
    # -- Override host setting in swagger.json
    hostOverride: http://localhost:8000
    # -- Assumes that the OpenAPI Spec has been saved to a configmap in the namespace of the scan / this release. Should be null if not used.
    #configMap: null
      # Object with two keys: "name" name of the config map, and "key" which is the key / property in the configmap which holds the openapi spec file.
      # name: my-configmap-with-openapi-spec
      # key: openapi.yaml
    # -- Allows to embed the entire yaml / json OpenAPI spec in the values. Should be null if not used.
    #spec: null

spiders:
  - name: scb-petstore-spider
    # String: Name of the context to spider, default: first context
    context: scb-petstore-context
    # String: Url to start spidering from, default: first context URL
    url: http://localhost:8000/v2
    # Int: Fail if spider finds less than the specified number of URLs, default: 0
    failIfFoundUrlsLessThan: 0
    # Int: Warn if spider finds less than the specified number of URLs, default: 0
    warnIfFoundUrlsLessThan: 0
    # Int: The max time in minutes the spider will be allowed to run for, default: 0 unlimited
    maxDuration: 1
    # Int: The maximum tree depth to explore, default 5
    maxDepth: 5
    # Int: The maximum number of children to add to each node in the tree                     
    maxChildren: 10
    # # Int: The max size of a response that will be parsed, default: 2621440 - 2.5 Mb
    # maxParseSizeBytes: 2621440
    # Bool: Whether the spider will accept cookies, default: true
    acceptCookies: true
    # Bool: Whether the spider will handle OData responses, default: false
    handleODataParametersVisited: false
    # Enum [ignore_completely, ignore_value, use_all]: How query string parameters are used when checking if a URI has already been visited, default: use_all
    handleParameters: use_all
    # Bool: Whether the spider will parse HTML comments in order to find URLs, default: true
    parseComments: true
    # Bool: Whether the spider will parse Git metadata in order to find URLs, default: false
    parseGit: false
    # Bool: Whether the spider will parse 'robots.txt' files in order to find URLs, default: true
    parseRobotsTxt: false
    # Bool: Whether the spider will parse 'sitemap.xml' files in order to find URLs, default: true
    parseSitemapXml: false
    # Bool: Whether the spider will parse SVN metadata in order to find URLs, default: false
    parseSVNEntries: false
    # Bool: Whether the spider will submit POST forms, default: true
    postForm: true
    # Bool: Whether the spider will process forms, default: true
    processForm: true
    # Int: The time between the requests sent to a server in milliseconds, default: 200
    requestWaitTime: 200
    # Bool: Whether the spider will send the referer header, default: true
    sendRefererHeader: true
    # Int: The number of spider threads, default: 2             
    threadCount: 5
    # String: The user agent to use in requests, default: '' - use the default ZAP one               
    userAgent: "secureCodeBox / ZAP Spider"
scanners:
  - name: scb-petstore-scan
    # String: Name of the context to attack, default: first context
    context: scb-petstore-context
    # String: Url to start scaning from, default: first context URL
    url: http://localhost:8000/v2
    # String: Name of the scan policy to be used, default: Default Policy
    policy: "API-Minimal"
    # Int: The max time in minutes any individual rule will be allowed to run for, default: 0 unlimited
    maxRuleDurationInMins: 1
    # Int: The max time in minutes the active scanner will be allowed to run for, default: 0 unlimited          
    maxScanDurationInMins: 5
    # Int: The max number of threads per host, default: 2
    threadPerHost: 5
    # Int: The delay in milliseconds between each request, use to reduce the strain on the target, default 0
    delayInMs: 0
    # Bool: If set will add an extra query parameter to requests that do not have one, default: false
    addQueryParam: false
    # Bool: If set then automatically handle anti CSRF tokens, default: false
    handleAntiCSRFTokens: false
    # Bool: If set then the relevant rule Id will be injected into the X-ZAP-Scan-ID header of each request, default: false           
    injectPluginIdInHeader: false
    # Bool: If set then the headers of requests that do not include any parameters will be scanned, default: false
    scanHeadersAllRequests: false
